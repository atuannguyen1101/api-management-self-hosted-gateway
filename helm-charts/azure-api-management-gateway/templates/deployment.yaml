apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "azure-api-management-gateway.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "azure-api-management-gateway.name" . }}
    helm.sh/chart: {{ include "azure-api-management-gateway.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "azure-api-management-gateway.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "azure-api-management-gateway.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/proxysecret: {{ include (print $.Template.BasePath "/azure-proxy-secret.yaml") . | sha256sum }}
      {{ if .Values.dapr.enabled -}}
        dapr.io/enabled: "true"
        {{ if .Values.dapr.appId -}}
        dapr.io/app-id: {{ .Values.dapr.appId | quote }}
        {{ end }}
        dapr.io/config: {{ .Values.dapr.config | quote }}
        dapr.io/log-as-json: {{ .Values.dapr.logging.useJsonOutput | quote }}
        dapr.io/log-level: {{ .Values.dapr.logging.level | quote }}
      {{ end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "azure-api-management-gateway.fullname" . }}
          {{ if .Values.global.isProxyEnabled }}
            - secretRef:
                name: proxy-config
          {{ end }}
          ports:
            - name: http
              containerPort: {{ .Values.gateway.httpPort | int }}
            - name: https
              containerPort: {{ .Values.gateway.httpsPort | int }}
          readinessProbe:
            httpGet:
              path: /internal-status-0123456789abcdef
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 5
            failureThreshold: 3
            successThreshold: 1
        {{- if  and .Values.global.isProxyEnabled .Values.global.proxyCert }}
          volumeMounts:
            - name: ssl-certs
              mountPath: /etc/ssl/certs/
              readOnly: false
            - mountPath: /usr/local/share/ca-certificates/proxy-cert.crt
              subPath: proxy-cert.crt
              name: proxy-certstore  
        {{- end }}
          env:
            - name: config.service.auth
              valueFrom:
                secretKeyRef:
                  name: {{ include "azure-api-management-gateway.fullname" . }}
                  key: gateway-key
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      
    {{- if  and .Values.global.isProxyEnabled .Values.global.proxyCert }}
      volumes:
          - name: proxy-certstore
            secret:
              secretName: proxy-cert
          - name: ssl-certs
            emptyDir: {}
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}